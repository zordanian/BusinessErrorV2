//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusinessErrorV2.Databases
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class UiPathEntities : DbContext
    {
        public UiPathEntities()
            : base("name=UiPathEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<Assets> Assets { get; set; }
        public virtual DbSet<AssetValues> AssetValues { get; set; }
        public virtual DbSet<AuditLogEntities> AuditLogEntities { get; set; }
        public virtual DbSet<AuditLogs> AuditLogs { get; set; }
        public virtual DbSet<BackgroundJobs> BackgroundJobs { get; set; }
        public virtual DbSet<Calendars> Calendars { get; set; }
        public virtual DbSet<CredentialStores> CredentialStores { get; set; }
        public virtual DbSet<DefaultCredentialStores> DefaultCredentialStores { get; set; }
        public virtual DbSet<Editions> Editions { get; set; }
        public virtual DbSet<EntityChanges> EntityChanges { get; set; }
        public virtual DbSet<EntityChangeSets> EntityChangeSets { get; set; }
        public virtual DbSet<EntityPropertyChanges> EntityPropertyChanges { get; set; }
        public virtual DbSet<Environments> Environments { get; set; }
        public virtual DbSet<ExecutionMedia> ExecutionMedia { get; set; }
        public virtual DbSet<Features> Features { get; set; }
        public virtual DbSet<HostLicenses> HostLicenses { get; set; }
        public virtual DbSet<JobEvents> JobEvents { get; set; }
        public virtual DbSet<Jobs> Jobs { get; set; }
        public virtual DbSet<JobTriggers> JobTriggers { get; set; }
        public virtual DbSet<Languages> Languages { get; set; }
        public virtual DbSet<LanguageTexts> LanguageTexts { get; set; }
        public virtual DbSet<Licenses> Licenses { get; set; }
        public virtual DbSet<Logs> Logs { get; set; }
        public virtual DbSet<Machines> Machines { get; set; }
        public virtual DbSet<MessageTemplates> MessageTemplates { get; set; }
        public virtual DbSet<Notifications> Notifications { get; set; }
        public virtual DbSet<NotificationSubscriptions> NotificationSubscriptions { get; set; }
        public virtual DbSet<OrganizationUnitRoles> OrganizationUnitRoles { get; set; }
        public virtual DbSet<OrganizationUnits> OrganizationUnits { get; set; }
        public virtual DbSet<PackageDefinitions> PackageDefinitions { get; set; }
        public virtual DbSet<PackageMetadata> PackageMetadata { get; set; }
        public virtual DbSet<Permissions> Permissions { get; set; }
        public virtual DbSet<PreviousPasswords> PreviousPasswords { get; set; }
        public virtual DbSet<ProcessSchedules> ProcessSchedules { get; set; }
        public virtual DbSet<QueueDefinitions> QueueDefinitions { get; set; }
        public virtual DbSet<QueueItemComments> QueueItemComments { get; set; }
        public virtual DbSet<QueueItemEvents> QueueItemEvents { get; set; }
        public virtual DbSet<QueueItems> QueueItems { get; set; }
        public virtual DbSet<QueueProcessingRecords> QueueProcessingRecords { get; set; }
        public virtual DbSet<QueueProcessingRecordsOld> QueueProcessingRecordsOld { get; set; }
        public virtual DbSet<QueueProcessingRecordsStaging> QueueProcessingRecordsStaging { get; set; }
        public virtual DbSet<Releases> Releases { get; set; }
        public virtual DbSet<ReleaseVersions> ReleaseVersions { get; set; }
        public virtual DbSet<RobotCredentials> RobotCredentials { get; set; }
        public virtual DbSet<RobotLicenseLogs> RobotLicenseLogs { get; set; }
        public virtual DbSet<RobotLicenses> RobotLicenses { get; set; }
        public virtual DbSet<RobotLicenseStats> RobotLicenseStats { get; set; }
        public virtual DbSet<Robots> Robots { get; set; }
        public virtual DbSet<RoleClaims> RoleClaims { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<Sessions> Sessions { get; set; }
        public virtual DbSet<Settings> Settings { get; set; }
        public virtual DbSet<TaskCatalogs> TaskCatalogs { get; set; }
        public virtual DbSet<Tasks> Tasks { get; set; }
        public virtual DbSet<TenantNotifications> TenantNotifications { get; set; }
        public virtual DbSet<Tenants> Tenants { get; set; }
        public virtual DbSet<UserAccounts> UserAccounts { get; set; }
        public virtual DbSet<UserClaims> UserClaims { get; set; }
        public virtual DbSet<UserLoginAttempts> UserLoginAttempts { get; set; }
        public virtual DbSet<UserLogins> UserLogins { get; set; }
        public virtual DbSet<UserNotifications> UserNotifications { get; set; }
        public virtual DbSet<UserOrganizationUnits> UserOrganizationUnits { get; set; }
        public virtual DbSet<UserRoles> UserRoles { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<WebhookEvents> WebhookEvents { get; set; }
        public virtual DbSet<Webhooks> Webhooks { get; set; }
        public virtual DbSet<QRTZ_BLOB_TRIGGERS> QRTZ_BLOB_TRIGGERS { get; set; }
        public virtual DbSet<QRTZ_CALENDARS> QRTZ_CALENDARS { get; set; }
        public virtual DbSet<QRTZ_CRON_TRIGGERS> QRTZ_CRON_TRIGGERS { get; set; }
        public virtual DbSet<QRTZ_FIRED_TRIGGERS> QRTZ_FIRED_TRIGGERS { get; set; }
        public virtual DbSet<QRTZ_JOB_DETAILS> QRTZ_JOB_DETAILS { get; set; }
        public virtual DbSet<QRTZ_LOCKS> QRTZ_LOCKS { get; set; }
        public virtual DbSet<QRTZ_PAUSED_TRIGGER_GRPS> QRTZ_PAUSED_TRIGGER_GRPS { get; set; }
        public virtual DbSet<QRTZ_SCHEDULER_STATE> QRTZ_SCHEDULER_STATE { get; set; }
        public virtual DbSet<QRTZ_SIMPLE_TRIGGERS> QRTZ_SIMPLE_TRIGGERS { get; set; }
        public virtual DbSet<QRTZ_SIMPROP_TRIGGERS> QRTZ_SIMPROP_TRIGGERS { get; set; }
        public virtual DbSet<QRTZ_TRIGGERS> QRTZ_TRIGGERS { get; set; }
        public virtual DbSet<ErrorLogs> ErrorLogs { get; set; }
        public virtual DbSet<vwQueueReferences> vwQueueReferences { get; set; }
        public virtual DbSet<vwRobotAssociatedProcesses> vwRobotAssociatedProcesses { get; set; }
    
        [DbFunction("UiPathEntities", "GetQueueProcessingRecordsStatistics")]
        public virtual IQueryable<GetQueueProcessingRecordsStatistics_Result> GetQueueProcessingRecordsStatistics(Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, Nullable<int> interval, string type, Nullable<int> period, Nullable<int> endInterval)
        {
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("endTime", endTime) :
                new ObjectParameter("endTime", typeof(System.DateTime));
    
            var intervalParameter = interval.HasValue ?
                new ObjectParameter("interval", interval) :
                new ObjectParameter("interval", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(int));
    
            var endIntervalParameter = endInterval.HasValue ?
                new ObjectParameter("endInterval", endInterval) :
                new ObjectParameter("endInterval", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetQueueProcessingRecordsStatistics_Result>("[UiPathEntities].[GetQueueProcessingRecordsStatistics](@startTime, @endTime, @interval, @type, @period, @endInterval)", startTimeParameter, endTimeParameter, intervalParameter, typeParameter, periodParameter, endIntervalParameter);
        }
    }
}
