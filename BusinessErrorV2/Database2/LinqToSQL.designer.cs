#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusinessErrorV2.Database2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="UiPath_Test")]
	public partial class LinqToSQLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertQueueItem(QueueItem instance);
    partial void UpdateQueueItem(QueueItem instance);
    partial void DeleteQueueItem(QueueItem instance);
    partial void InsertRobot(Robot instance);
    partial void UpdateRobot(Robot instance);
    partial void DeleteRobot(Robot instance);
    partial void InsertRobotsXEnvironment(RobotsXEnvironment instance);
    partial void UpdateRobotsXEnvironment(RobotsXEnvironment instance);
    partial void DeleteRobotsXEnvironment(RobotsXEnvironment instance);
    partial void InsertEnvironment(Environment instance);
    partial void UpdateEnvironment(Environment instance);
    partial void DeleteEnvironment(Environment instance);
    partial void InsertRelease(Release instance);
    partial void UpdateRelease(Release instance);
    partial void DeleteRelease(Release instance);
    #endregion
		
		public LinqToSQLDataContext() : 
				base(global::BusinessErrorV2.Properties.Settings.Default.UiPath_TestConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<QueueItem> QueueItems
		{
			get
			{
				return this.GetTable<QueueItem>();
			}
		}
		
		public System.Data.Linq.Table<Robot> Robots
		{
			get
			{
				return this.GetTable<Robot>();
			}
		}
		
		public System.Data.Linq.Table<RobotsXEnvironment> RobotsXEnvironments
		{
			get
			{
				return this.GetTable<RobotsXEnvironment>();
			}
		}
		
		public System.Data.Linq.Table<Environment> Environments
		{
			get
			{
				return this.GetTable<Environment>();
			}
		}
		
		public System.Data.Linq.Table<Release> Releases
		{
			get
			{
				return this.GetTable<Release>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QueueItems")]
	public partial class QueueItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _Priority;
		
		private long _QueueDefinitionId;
		
		private System.Guid _Key;
		
		private int _Status;
		
		private int _ReviewStatus;
		
		private System.Nullable<long> _RobotId;
		
		private System.Nullable<System.DateTime> _StartProcessing;
		
		private System.Nullable<System.DateTime> _EndProcessing;
		
		private int _SecondsInPreviousAttempts;
		
		private System.Nullable<long> _AncestorId;
		
		private int _RetryNumber;
		
		private string _SpecificData;
		
		private int _TenantId;
		
		private System.Nullable<System.DateTime> _LastModificationTime;
		
		private System.Nullable<long> _LastModifierUserId;
		
		private System.DateTime _CreationTime;
		
		private System.Nullable<long> _CreatorUserId;
		
		private System.Nullable<System.DateTime> _DeferDate;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private string _Progress;
		
		private string _Output;
		
		private long _OrganizationUnitId;
		
		private System.Data.Linq.Binary _RowVersion;
		
		private System.Nullable<int> _ProcessingExceptionType;
		
		private bool _HasDueDate;
		
		private string _Reference;
		
		private System.Nullable<long> _ReviewerUserId;
		
		private string _ProcessingExceptionReason;
		
		private string _ProcessingExceptionDetails;
		
		private string _ProcessingExceptionAssociatedImageFilePath;
		
		private System.Nullable<System.DateTime> _ProcessingExceptionCreationTime;
		
		private System.Nullable<long> _CreatorJobId;
		
		private System.Nullable<long> _ExecutorJobId;
		
		private string _AnalyticsData;
		
		private System.Nullable<System.DateTime> _RiskSlaDate;
		
		private System.Nullable<bool> _HasRiskSlaDate;
		
		private EntityRef<Robot> _Robot;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    partial void OnQueueDefinitionIdChanging(long value);
    partial void OnQueueDefinitionIdChanged();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnReviewStatusChanging(int value);
    partial void OnReviewStatusChanged();
    partial void OnRobotIdChanging(System.Nullable<long> value);
    partial void OnRobotIdChanged();
    partial void OnStartProcessingChanging(System.Nullable<System.DateTime> value);
    partial void OnStartProcessingChanged();
    partial void OnEndProcessingChanging(System.Nullable<System.DateTime> value);
    partial void OnEndProcessingChanged();
    partial void OnSecondsInPreviousAttemptsChanging(int value);
    partial void OnSecondsInPreviousAttemptsChanged();
    partial void OnAncestorIdChanging(System.Nullable<long> value);
    partial void OnAncestorIdChanged();
    partial void OnRetryNumberChanging(int value);
    partial void OnRetryNumberChanged();
    partial void OnSpecificDataChanging(string value);
    partial void OnSpecificDataChanged();
    partial void OnTenantIdChanging(int value);
    partial void OnTenantIdChanged();
    partial void OnLastModificationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModificationTimeChanged();
    partial void OnLastModifierUserIdChanging(System.Nullable<long> value);
    partial void OnLastModifierUserIdChanged();
    partial void OnCreationTimeChanging(System.DateTime value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIdChanging(System.Nullable<long> value);
    partial void OnCreatorUserIdChanged();
    partial void OnDeferDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeferDateChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnProgressChanging(string value);
    partial void OnProgressChanged();
    partial void OnOutputChanging(string value);
    partial void OnOutputChanged();
    partial void OnOrganizationUnitIdChanging(long value);
    partial void OnOrganizationUnitIdChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    partial void OnProcessingExceptionTypeChanging(System.Nullable<int> value);
    partial void OnProcessingExceptionTypeChanged();
    partial void OnHasDueDateChanging(bool value);
    partial void OnHasDueDateChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnReviewerUserIdChanging(System.Nullable<long> value);
    partial void OnReviewerUserIdChanged();
    partial void OnProcessingExceptionReasonChanging(string value);
    partial void OnProcessingExceptionReasonChanged();
    partial void OnProcessingExceptionDetailsChanging(string value);
    partial void OnProcessingExceptionDetailsChanged();
    partial void OnProcessingExceptionAssociatedImageFilePathChanging(string value);
    partial void OnProcessingExceptionAssociatedImageFilePathChanged();
    partial void OnProcessingExceptionCreationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessingExceptionCreationTimeChanged();
    partial void OnCreatorJobIdChanging(System.Nullable<long> value);
    partial void OnCreatorJobIdChanged();
    partial void OnExecutorJobIdChanging(System.Nullable<long> value);
    partial void OnExecutorJobIdChanged();
    partial void OnAnalyticsDataChanging(string value);
    partial void OnAnalyticsDataChanged();
    partial void OnRiskSlaDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRiskSlaDateChanged();
    partial void OnHasRiskSlaDateChanging(System.Nullable<bool> value);
    partial void OnHasRiskSlaDateChanged();
    #endregion
		
		public QueueItem()
		{
			this._Robot = default(EntityRef<Robot>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueueDefinitionId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long QueueDefinitionId
		{
			get
			{
				return this._QueueDefinitionId;
			}
			set
			{
				if ((this._QueueDefinitionId != value))
				{
					this.OnQueueDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._QueueDefinitionId = value;
					this.SendPropertyChanged("QueueDefinitionId");
					this.OnQueueDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewStatus", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ReviewStatus
		{
			get
			{
				return this._ReviewStatus;
			}
			set
			{
				if ((this._ReviewStatus != value))
				{
					this.OnReviewStatusChanging(value);
					this.SendPropertyChanging();
					this._ReviewStatus = value;
					this.SendPropertyChanged("ReviewStatus");
					this.OnReviewStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RobotId", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> RobotId
		{
			get
			{
				return this._RobotId;
			}
			set
			{
				if ((this._RobotId != value))
				{
					if (this._Robot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRobotIdChanging(value);
					this.SendPropertyChanging();
					this._RobotId = value;
					this.SendPropertyChanged("RobotId");
					this.OnRobotIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartProcessing", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> StartProcessing
		{
			get
			{
				return this._StartProcessing;
			}
			set
			{
				if ((this._StartProcessing != value))
				{
					this.OnStartProcessingChanging(value);
					this.SendPropertyChanging();
					this._StartProcessing = value;
					this.SendPropertyChanged("StartProcessing");
					this.OnStartProcessingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndProcessing", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EndProcessing
		{
			get
			{
				return this._EndProcessing;
			}
			set
			{
				if ((this._EndProcessing != value))
				{
					this.OnEndProcessingChanging(value);
					this.SendPropertyChanging();
					this._EndProcessing = value;
					this.SendPropertyChanged("EndProcessing");
					this.OnEndProcessingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondsInPreviousAttempts", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SecondsInPreviousAttempts
		{
			get
			{
				return this._SecondsInPreviousAttempts;
			}
			set
			{
				if ((this._SecondsInPreviousAttempts != value))
				{
					this.OnSecondsInPreviousAttemptsChanging(value);
					this.SendPropertyChanging();
					this._SecondsInPreviousAttempts = value;
					this.SendPropertyChanged("SecondsInPreviousAttempts");
					this.OnSecondsInPreviousAttemptsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AncestorId", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> AncestorId
		{
			get
			{
				return this._AncestorId;
			}
			set
			{
				if ((this._AncestorId != value))
				{
					this.OnAncestorIdChanging(value);
					this.SendPropertyChanging();
					this._AncestorId = value;
					this.SendPropertyChanged("AncestorId");
					this.OnAncestorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetryNumber", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int RetryNumber
		{
			get
			{
				return this._RetryNumber;
			}
			set
			{
				if ((this._RetryNumber != value))
				{
					this.OnRetryNumberChanging(value);
					this.SendPropertyChanging();
					this._RetryNumber = value;
					this.SendPropertyChanged("RetryNumber");
					this.OnRetryNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificData", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SpecificData
		{
			get
			{
				return this._SpecificData;
			}
			set
			{
				if ((this._SpecificData != value))
				{
					this.OnSpecificDataChanging(value);
					this.SendPropertyChanging();
					this._SpecificData = value;
					this.SendPropertyChanged("SpecificData");
					this.OnSpecificDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenantId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TenantId
		{
			get
			{
				return this._TenantId;
			}
			set
			{
				if ((this._TenantId != value))
				{
					this.OnTenantIdChanging(value);
					this.SendPropertyChanging();
					this._TenantId = value;
					this.SendPropertyChanged("TenantId");
					this.OnTenantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifierUserId", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> LastModifierUserId
		{
			get
			{
				return this._LastModifierUserId;
			}
			set
			{
				if ((this._LastModifierUserId != value))
				{
					this.OnLastModifierUserIdChanging(value);
					this.SendPropertyChanging();
					this._LastModifierUserId = value;
					this.SendPropertyChanged("LastModifierUserId");
					this.OnLastModifierUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserId", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> CreatorUserId
		{
			get
			{
				return this._CreatorUserId;
			}
			set
			{
				if ((this._CreatorUserId != value))
				{
					this.OnCreatorUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserId = value;
					this.SendPropertyChanged("CreatorUserId");
					this.OnCreatorUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeferDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DeferDate
		{
			get
			{
				return this._DeferDate;
			}
			set
			{
				if ((this._DeferDate != value))
				{
					this.OnDeferDateChanging(value);
					this.SendPropertyChanging();
					this._DeferDate = value;
					this.SendPropertyChanged("DeferDate");
					this.OnDeferDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Progress", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Progress
		{
			get
			{
				return this._Progress;
			}
			set
			{
				if ((this._Progress != value))
				{
					this.OnProgressChanging(value);
					this.SendPropertyChanging();
					this._Progress = value;
					this.SendPropertyChanged("Progress");
					this.OnProgressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Output", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Output
		{
			get
			{
				return this._Output;
			}
			set
			{
				if ((this._Output != value))
				{
					this.OnOutputChanging(value);
					this.SendPropertyChanging();
					this._Output = value;
					this.SendPropertyChanged("Output");
					this.OnOutputChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationUnitId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long OrganizationUnitId
		{
			get
			{
				return this._OrganizationUnitId;
			}
			set
			{
				if ((this._OrganizationUnitId != value))
				{
					this.OnOrganizationUnitIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationUnitId = value;
					this.SendPropertyChanged("OrganizationUnitId");
					this.OnOrganizationUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessingExceptionType", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ProcessingExceptionType
		{
			get
			{
				return this._ProcessingExceptionType;
			}
			set
			{
				if ((this._ProcessingExceptionType != value))
				{
					this.OnProcessingExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ProcessingExceptionType = value;
					this.SendPropertyChanged("ProcessingExceptionType");
					this.OnProcessingExceptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDueDate", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool HasDueDate
		{
			get
			{
				return this._HasDueDate;
			}
			set
			{
				if ((this._HasDueDate != value))
				{
					this.OnHasDueDateChanging(value);
					this.SendPropertyChanging();
					this._HasDueDate = value;
					this.SendPropertyChanged("HasDueDate");
					this.OnHasDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="NVarChar(128)", UpdateCheck=UpdateCheck.Never)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewerUserId", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> ReviewerUserId
		{
			get
			{
				return this._ReviewerUserId;
			}
			set
			{
				if ((this._ReviewerUserId != value))
				{
					this.OnReviewerUserIdChanging(value);
					this.SendPropertyChanging();
					this._ReviewerUserId = value;
					this.SendPropertyChanged("ReviewerUserId");
					this.OnReviewerUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessingExceptionReason", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ProcessingExceptionReason
		{
			get
			{
				return this._ProcessingExceptionReason;
			}
			set
			{
				if ((this._ProcessingExceptionReason != value))
				{
					this.OnProcessingExceptionReasonChanging(value);
					this.SendPropertyChanging();
					this._ProcessingExceptionReason = value;
					this.SendPropertyChanged("ProcessingExceptionReason");
					this.OnProcessingExceptionReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessingExceptionDetails", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ProcessingExceptionDetails
		{
			get
			{
				return this._ProcessingExceptionDetails;
			}
			set
			{
				if ((this._ProcessingExceptionDetails != value))
				{
					this.OnProcessingExceptionDetailsChanging(value);
					this.SendPropertyChanging();
					this._ProcessingExceptionDetails = value;
					this.SendPropertyChanged("ProcessingExceptionDetails");
					this.OnProcessingExceptionDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessingExceptionAssociatedImageFilePath", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ProcessingExceptionAssociatedImageFilePath
		{
			get
			{
				return this._ProcessingExceptionAssociatedImageFilePath;
			}
			set
			{
				if ((this._ProcessingExceptionAssociatedImageFilePath != value))
				{
					this.OnProcessingExceptionAssociatedImageFilePathChanging(value);
					this.SendPropertyChanging();
					this._ProcessingExceptionAssociatedImageFilePath = value;
					this.SendPropertyChanged("ProcessingExceptionAssociatedImageFilePath");
					this.OnProcessingExceptionAssociatedImageFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessingExceptionCreationTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ProcessingExceptionCreationTime
		{
			get
			{
				return this._ProcessingExceptionCreationTime;
			}
			set
			{
				if ((this._ProcessingExceptionCreationTime != value))
				{
					this.OnProcessingExceptionCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._ProcessingExceptionCreationTime = value;
					this.SendPropertyChanged("ProcessingExceptionCreationTime");
					this.OnProcessingExceptionCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorJobId", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> CreatorJobId
		{
			get
			{
				return this._CreatorJobId;
			}
			set
			{
				if ((this._CreatorJobId != value))
				{
					this.OnCreatorJobIdChanging(value);
					this.SendPropertyChanging();
					this._CreatorJobId = value;
					this.SendPropertyChanged("CreatorJobId");
					this.OnCreatorJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutorJobId", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> ExecutorJobId
		{
			get
			{
				return this._ExecutorJobId;
			}
			set
			{
				if ((this._ExecutorJobId != value))
				{
					this.OnExecutorJobIdChanging(value);
					this.SendPropertyChanging();
					this._ExecutorJobId = value;
					this.SendPropertyChanged("ExecutorJobId");
					this.OnExecutorJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalyticsData", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AnalyticsData
		{
			get
			{
				return this._AnalyticsData;
			}
			set
			{
				if ((this._AnalyticsData != value))
				{
					this.OnAnalyticsDataChanging(value);
					this.SendPropertyChanging();
					this._AnalyticsData = value;
					this.SendPropertyChanged("AnalyticsData");
					this.OnAnalyticsDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskSlaDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> RiskSlaDate
		{
			get
			{
				return this._RiskSlaDate;
			}
			set
			{
				if ((this._RiskSlaDate != value))
				{
					this.OnRiskSlaDateChanging(value);
					this.SendPropertyChanging();
					this._RiskSlaDate = value;
					this.SendPropertyChanged("RiskSlaDate");
					this.OnRiskSlaDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasRiskSlaDate", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> HasRiskSlaDate
		{
			get
			{
				return this._HasRiskSlaDate;
			}
			set
			{
				if ((this._HasRiskSlaDate != value))
				{
					this.OnHasRiskSlaDateChanging(value);
					this.SendPropertyChanging();
					this._HasRiskSlaDate = value;
					this.SendPropertyChanged("HasRiskSlaDate");
					this.OnHasRiskSlaDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Robot_QueueItem", Storage="_Robot", ThisKey="RobotId", OtherKey="Id", IsForeignKey=true)]
		public Robot Robot
		{
			get
			{
				return this._Robot.Entity;
			}
			set
			{
				Robot previousValue = this._Robot.Entity;
				if (((previousValue != value) 
							|| (this._Robot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Robot.Entity = null;
						previousValue.QueueItems.Remove(this);
					}
					this._Robot.Entity = value;
					if ((value != null))
					{
						value.QueueItems.Add(this);
						this._RobotId = value.Id;
					}
					else
					{
						this._RobotId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Robot");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Robots")]
	public partial class Robot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Key;
		
		private string _LicenseKey;
		
		private string _Name;
		
		private string _UserName;
		
		private int _Type;
		
		private string _RobotDescription;
		
		private int _TenantId;
		
		private bool _IsDeleted;
		
		private System.Nullable<long> _DeleterUserId;
		
		private System.Nullable<System.DateTime> _DeletionTime;
		
		private System.Nullable<System.DateTime> _LastModificationTime;
		
		private System.Nullable<long> _LastModifierUserId;
		
		private System.DateTime _CreationTime;
		
		private System.Nullable<long> _CreatorUserId;
		
		private System.Nullable<long> _OrganizationUnitId;
		
		private string _ExecutionSettingsData;
		
		private System.Nullable<long> _MachineId;
		
		private int _HostingType;
		
		private string _Version;
		
		private System.Nullable<long> _UserId;
		
		private int _ProvisionType;
		
		private bool _IsExternalLicensed;
		
		private EntitySet<QueueItem> _QueueItems;
		
		private EntitySet<RobotsXEnvironment> _RobotsXEnvironments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnLicenseKeyChanging(string value);
    partial void OnLicenseKeyChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnRobotDescriptionChanging(string value);
    partial void OnRobotDescriptionChanged();
    partial void OnTenantIdChanging(int value);
    partial void OnTenantIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnDeleterUserIdChanging(System.Nullable<long> value);
    partial void OnDeleterUserIdChanged();
    partial void OnDeletionTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletionTimeChanged();
    partial void OnLastModificationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModificationTimeChanged();
    partial void OnLastModifierUserIdChanging(System.Nullable<long> value);
    partial void OnLastModifierUserIdChanged();
    partial void OnCreationTimeChanging(System.DateTime value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIdChanging(System.Nullable<long> value);
    partial void OnCreatorUserIdChanged();
    partial void OnOrganizationUnitIdChanging(System.Nullable<long> value);
    partial void OnOrganizationUnitIdChanged();
    partial void OnExecutionSettingsDataChanging(string value);
    partial void OnExecutionSettingsDataChanged();
    partial void OnMachineIdChanging(System.Nullable<long> value);
    partial void OnMachineIdChanged();
    partial void OnHostingTypeChanging(int value);
    partial void OnHostingTypeChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnUserIdChanging(System.Nullable<long> value);
    partial void OnUserIdChanged();
    partial void OnProvisionTypeChanging(int value);
    partial void OnProvisionTypeChanged();
    partial void OnIsExternalLicensedChanging(bool value);
    partial void OnIsExternalLicensedChanged();
    #endregion
		
		public Robot()
		{
			this._QueueItems = new EntitySet<QueueItem>(new Action<QueueItem>(this.attach_QueueItems), new Action<QueueItem>(this.detach_QueueItems));
			this._RobotsXEnvironments = new EntitySet<RobotsXEnvironment>(new Action<RobotsXEnvironment>(this.attach_RobotsXEnvironments), new Action<RobotsXEnvironment>(this.detach_RobotsXEnvironments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseKey", DbType="NVarChar(255)")]
		public string LicenseKey
		{
			get
			{
				return this._LicenseKey;
			}
			set
			{
				if ((this._LicenseKey != value))
				{
					this.OnLicenseKeyChanging(value);
					this.SendPropertyChanging();
					this._LicenseKey = value;
					this.SendPropertyChanged("LicenseKey");
					this.OnLicenseKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(100)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RobotDescription", DbType="NVarChar(500)")]
		public string RobotDescription
		{
			get
			{
				return this._RobotDescription;
			}
			set
			{
				if ((this._RobotDescription != value))
				{
					this.OnRobotDescriptionChanging(value);
					this.SendPropertyChanging();
					this._RobotDescription = value;
					this.SendPropertyChanged("RobotDescription");
					this.OnRobotDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenantId", DbType="Int NOT NULL")]
		public int TenantId
		{
			get
			{
				return this._TenantId;
			}
			set
			{
				if ((this._TenantId != value))
				{
					this.OnTenantIdChanging(value);
					this.SendPropertyChanging();
					this._TenantId = value;
					this.SendPropertyChanged("TenantId");
					this.OnTenantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleterUserId", DbType="BigInt")]
		public System.Nullable<long> DeleterUserId
		{
			get
			{
				return this._DeleterUserId;
			}
			set
			{
				if ((this._DeleterUserId != value))
				{
					this.OnDeleterUserIdChanging(value);
					this.SendPropertyChanging();
					this._DeleterUserId = value;
					this.SendPropertyChanged("DeleterUserId");
					this.OnDeleterUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletionTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletionTime
		{
			get
			{
				return this._DeletionTime;
			}
			set
			{
				if ((this._DeletionTime != value))
				{
					this.OnDeletionTimeChanging(value);
					this.SendPropertyChanging();
					this._DeletionTime = value;
					this.SendPropertyChanged("DeletionTime");
					this.OnDeletionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifierUserId", DbType="BigInt")]
		public System.Nullable<long> LastModifierUserId
		{
			get
			{
				return this._LastModifierUserId;
			}
			set
			{
				if ((this._LastModifierUserId != value))
				{
					this.OnLastModifierUserIdChanging(value);
					this.SendPropertyChanging();
					this._LastModifierUserId = value;
					this.SendPropertyChanged("LastModifierUserId");
					this.OnLastModifierUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserId", DbType="BigInt")]
		public System.Nullable<long> CreatorUserId
		{
			get
			{
				return this._CreatorUserId;
			}
			set
			{
				if ((this._CreatorUserId != value))
				{
					this.OnCreatorUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserId = value;
					this.SendPropertyChanged("CreatorUserId");
					this.OnCreatorUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationUnitId", DbType="BigInt")]
		public System.Nullable<long> OrganizationUnitId
		{
			get
			{
				return this._OrganizationUnitId;
			}
			set
			{
				if ((this._OrganizationUnitId != value))
				{
					this.OnOrganizationUnitIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationUnitId = value;
					this.SendPropertyChanged("OrganizationUnitId");
					this.OnOrganizationUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionSettingsData", DbType="NVarChar(MAX)")]
		public string ExecutionSettingsData
		{
			get
			{
				return this._ExecutionSettingsData;
			}
			set
			{
				if ((this._ExecutionSettingsData != value))
				{
					this.OnExecutionSettingsDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionSettingsData = value;
					this.SendPropertyChanged("ExecutionSettingsData");
					this.OnExecutionSettingsDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineId", DbType="BigInt")]
		public System.Nullable<long> MachineId
		{
			get
			{
				return this._MachineId;
			}
			set
			{
				if ((this._MachineId != value))
				{
					this.OnMachineIdChanging(value);
					this.SendPropertyChanging();
					this._MachineId = value;
					this.SendPropertyChanged("MachineId");
					this.OnMachineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostingType", DbType="Int NOT NULL")]
		public int HostingType
		{
			get
			{
				return this._HostingType;
			}
			set
			{
				if ((this._HostingType != value))
				{
					this.OnHostingTypeChanging(value);
					this.SendPropertyChanging();
					this._HostingType = value;
					this.SendPropertyChanged("HostingType");
					this.OnHostingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(MAX)")]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
		public System.Nullable<long> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvisionType", DbType="Int NOT NULL")]
		public int ProvisionType
		{
			get
			{
				return this._ProvisionType;
			}
			set
			{
				if ((this._ProvisionType != value))
				{
					this.OnProvisionTypeChanging(value);
					this.SendPropertyChanging();
					this._ProvisionType = value;
					this.SendPropertyChanged("ProvisionType");
					this.OnProvisionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExternalLicensed", DbType="Bit NOT NULL")]
		public bool IsExternalLicensed
		{
			get
			{
				return this._IsExternalLicensed;
			}
			set
			{
				if ((this._IsExternalLicensed != value))
				{
					this.OnIsExternalLicensedChanging(value);
					this.SendPropertyChanging();
					this._IsExternalLicensed = value;
					this.SendPropertyChanged("IsExternalLicensed");
					this.OnIsExternalLicensedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Robot_QueueItem", Storage="_QueueItems", ThisKey="Id", OtherKey="RobotId")]
		public EntitySet<QueueItem> QueueItems
		{
			get
			{
				return this._QueueItems;
			}
			set
			{
				this._QueueItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Robot_RobotsXEnvironment", Storage="_RobotsXEnvironments", ThisKey="Id", OtherKey="RobotId")]
		public EntitySet<RobotsXEnvironment> RobotsXEnvironments
		{
			get
			{
				return this._RobotsXEnvironments;
			}
			set
			{
				this._RobotsXEnvironments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QueueItems(QueueItem entity)
		{
			this.SendPropertyChanging();
			entity.Robot = this;
		}
		
		private void detach_QueueItems(QueueItem entity)
		{
			this.SendPropertyChanging();
			entity.Robot = null;
		}
		
		private void attach_RobotsXEnvironments(RobotsXEnvironment entity)
		{
			this.SendPropertyChanging();
			entity.Robot = this;
		}
		
		private void detach_RobotsXEnvironments(RobotsXEnvironment entity)
		{
			this.SendPropertyChanging();
			entity.Robot = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RobotsXEnvironments")]
	public partial class RobotsXEnvironment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _EnvironmentId;
		
		private long _RobotId;
		
		private EntityRef<Robot> _Robot;
		
		private EntityRef<Environment> _Environment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEnvironmentIdChanging(long value);
    partial void OnEnvironmentIdChanged();
    partial void OnRobotIdChanging(long value);
    partial void OnRobotIdChanged();
    #endregion
		
		public RobotsXEnvironment()
		{
			this._Robot = default(EntityRef<Robot>);
			this._Environment = default(EntityRef<Environment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long EnvironmentId
		{
			get
			{
				return this._EnvironmentId;
			}
			set
			{
				if ((this._EnvironmentId != value))
				{
					if (this._Environment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnvironmentIdChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentId = value;
					this.SendPropertyChanged("EnvironmentId");
					this.OnEnvironmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RobotId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long RobotId
		{
			get
			{
				return this._RobotId;
			}
			set
			{
				if ((this._RobotId != value))
				{
					if (this._Robot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRobotIdChanging(value);
					this.SendPropertyChanging();
					this._RobotId = value;
					this.SendPropertyChanged("RobotId");
					this.OnRobotIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Robot_RobotsXEnvironment", Storage="_Robot", ThisKey="RobotId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Robot Robot
		{
			get
			{
				return this._Robot.Entity;
			}
			set
			{
				Robot previousValue = this._Robot.Entity;
				if (((previousValue != value) 
							|| (this._Robot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Robot.Entity = null;
						previousValue.RobotsXEnvironments.Remove(this);
					}
					this._Robot.Entity = value;
					if ((value != null))
					{
						value.RobotsXEnvironments.Add(this);
						this._RobotId = value.Id;
					}
					else
					{
						this._RobotId = default(long);
					}
					this.SendPropertyChanged("Robot");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Environment_RobotsXEnvironment", Storage="_Environment", ThisKey="EnvironmentId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Environment Environment
		{
			get
			{
				return this._Environment.Entity;
			}
			set
			{
				Environment previousValue = this._Environment.Entity;
				if (((previousValue != value) 
							|| (this._Environment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Environment.Entity = null;
						previousValue.RobotsXEnvironments.Remove(this);
					}
					this._Environment.Entity = value;
					if ((value != null))
					{
						value.RobotsXEnvironments.Add(this);
						this._EnvironmentId = value.Id;
					}
					else
					{
						this._EnvironmentId = default(long);
					}
					this.SendPropertyChanged("Environment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Environments")]
	public partial class Environment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _Description;
		
		private int _Type;
		
		private int _TenantId;
		
		private bool _IsDeleted;
		
		private System.Nullable<long> _DeleterUserId;
		
		private System.Nullable<System.DateTime> _DeletionTime;
		
		private System.Nullable<System.DateTime> _LastModificationTime;
		
		private System.Nullable<long> _LastModifierUserId;
		
		private System.DateTime _CreationTime;
		
		private System.Nullable<long> _CreatorUserId;
		
		private long _OrganizationUnitId;
		
		private EntitySet<RobotsXEnvironment> _RobotsXEnvironments;
		
		private EntitySet<Release> _Releases;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnTenantIdChanging(int value);
    partial void OnTenantIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnDeleterUserIdChanging(System.Nullable<long> value);
    partial void OnDeleterUserIdChanged();
    partial void OnDeletionTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletionTimeChanged();
    partial void OnLastModificationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModificationTimeChanged();
    partial void OnLastModifierUserIdChanging(System.Nullable<long> value);
    partial void OnLastModifierUserIdChanged();
    partial void OnCreationTimeChanging(System.DateTime value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIdChanging(System.Nullable<long> value);
    partial void OnCreatorUserIdChanged();
    partial void OnOrganizationUnitIdChanging(long value);
    partial void OnOrganizationUnitIdChanged();
    #endregion
		
		public Environment()
		{
			this._RobotsXEnvironments = new EntitySet<RobotsXEnvironment>(new Action<RobotsXEnvironment>(this.attach_RobotsXEnvironments), new Action<RobotsXEnvironment>(this.detach_RobotsXEnvironments));
			this._Releases = new EntitySet<Release>(new Action<Release>(this.attach_Releases), new Action<Release>(this.detach_Releases));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenantId", DbType="Int NOT NULL")]
		public int TenantId
		{
			get
			{
				return this._TenantId;
			}
			set
			{
				if ((this._TenantId != value))
				{
					this.OnTenantIdChanging(value);
					this.SendPropertyChanging();
					this._TenantId = value;
					this.SendPropertyChanged("TenantId");
					this.OnTenantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleterUserId", DbType="BigInt")]
		public System.Nullable<long> DeleterUserId
		{
			get
			{
				return this._DeleterUserId;
			}
			set
			{
				if ((this._DeleterUserId != value))
				{
					this.OnDeleterUserIdChanging(value);
					this.SendPropertyChanging();
					this._DeleterUserId = value;
					this.SendPropertyChanged("DeleterUserId");
					this.OnDeleterUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletionTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletionTime
		{
			get
			{
				return this._DeletionTime;
			}
			set
			{
				if ((this._DeletionTime != value))
				{
					this.OnDeletionTimeChanging(value);
					this.SendPropertyChanging();
					this._DeletionTime = value;
					this.SendPropertyChanged("DeletionTime");
					this.OnDeletionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifierUserId", DbType="BigInt")]
		public System.Nullable<long> LastModifierUserId
		{
			get
			{
				return this._LastModifierUserId;
			}
			set
			{
				if ((this._LastModifierUserId != value))
				{
					this.OnLastModifierUserIdChanging(value);
					this.SendPropertyChanging();
					this._LastModifierUserId = value;
					this.SendPropertyChanged("LastModifierUserId");
					this.OnLastModifierUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserId", DbType="BigInt")]
		public System.Nullable<long> CreatorUserId
		{
			get
			{
				return this._CreatorUserId;
			}
			set
			{
				if ((this._CreatorUserId != value))
				{
					this.OnCreatorUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserId = value;
					this.SendPropertyChanged("CreatorUserId");
					this.OnCreatorUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationUnitId", DbType="BigInt NOT NULL")]
		public long OrganizationUnitId
		{
			get
			{
				return this._OrganizationUnitId;
			}
			set
			{
				if ((this._OrganizationUnitId != value))
				{
					this.OnOrganizationUnitIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationUnitId = value;
					this.SendPropertyChanged("OrganizationUnitId");
					this.OnOrganizationUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Environment_RobotsXEnvironment", Storage="_RobotsXEnvironments", ThisKey="Id", OtherKey="EnvironmentId")]
		public EntitySet<RobotsXEnvironment> RobotsXEnvironments
		{
			get
			{
				return this._RobotsXEnvironments;
			}
			set
			{
				this._RobotsXEnvironments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Environment_Release", Storage="_Releases", ThisKey="Id", OtherKey="EnvironmentId")]
		public EntitySet<Release> Releases
		{
			get
			{
				return this._Releases;
			}
			set
			{
				this._Releases.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RobotsXEnvironments(RobotsXEnvironment entity)
		{
			this.SendPropertyChanging();
			entity.Environment = this;
		}
		
		private void detach_RobotsXEnvironments(RobotsXEnvironment entity)
		{
			this.SendPropertyChanging();
			entity.Environment = null;
		}
		
		private void attach_Releases(Release entity)
		{
			this.SendPropertyChanging();
			entity.Environment = this;
		}
		
		private void detach_Releases(Release entity)
		{
			this.SendPropertyChanging();
			entity.Environment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Releases")]
	public partial class Release : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _TenantId;
		
		private System.Guid _Key;
		
		private string _Name;
		
		private string _Description;
		
		private string _ProcessKey;
		
		private bool _Unattended;
		
		private bool _AllowMultiInstance;
		
		private System.Nullable<long> _EnvironmentId;
		
		private bool _IsDeleted;
		
		private System.Nullable<long> _DeleterUserId;
		
		private System.Nullable<System.DateTime> _DeletionTime;
		
		private System.Nullable<System.DateTime> _LastModificationTime;
		
		private System.Nullable<long> _LastModifierUserId;
		
		private System.DateTime _CreationTime;
		
		private System.Nullable<long> _CreatorUserId;
		
		private long _OrganizationUnitId;
		
		private string _InputArguments;
		
		private string _ProcessSettings;
		
		private EntityRef<Environment> _Environment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTenantIdChanging(int value);
    partial void OnTenantIdChanged();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnProcessKeyChanging(string value);
    partial void OnProcessKeyChanged();
    partial void OnUnattendedChanging(bool value);
    partial void OnUnattendedChanged();
    partial void OnAllowMultiInstanceChanging(bool value);
    partial void OnAllowMultiInstanceChanged();
    partial void OnEnvironmentIdChanging(System.Nullable<long> value);
    partial void OnEnvironmentIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnDeleterUserIdChanging(System.Nullable<long> value);
    partial void OnDeleterUserIdChanged();
    partial void OnDeletionTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletionTimeChanged();
    partial void OnLastModificationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModificationTimeChanged();
    partial void OnLastModifierUserIdChanging(System.Nullable<long> value);
    partial void OnLastModifierUserIdChanged();
    partial void OnCreationTimeChanging(System.DateTime value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIdChanging(System.Nullable<long> value);
    partial void OnCreatorUserIdChanged();
    partial void OnOrganizationUnitIdChanging(long value);
    partial void OnOrganizationUnitIdChanged();
    partial void OnInputArgumentsChanging(string value);
    partial void OnInputArgumentsChanged();
    partial void OnProcessSettingsChanging(string value);
    partial void OnProcessSettingsChanged();
    #endregion
		
		public Release()
		{
			this._Environment = default(EntityRef<Environment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenantId", DbType="Int NOT NULL")]
		public int TenantId
		{
			get
			{
				return this._TenantId;
			}
			set
			{
				if ((this._TenantId != value))
				{
					this.OnTenantIdChanging(value);
					this.SendPropertyChanging();
					this._TenantId = value;
					this.SendPropertyChanged("TenantId");
					this.OnTenantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(201) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessKey", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ProcessKey
		{
			get
			{
				return this._ProcessKey;
			}
			set
			{
				if ((this._ProcessKey != value))
				{
					this.OnProcessKeyChanging(value);
					this.SendPropertyChanging();
					this._ProcessKey = value;
					this.SendPropertyChanged("ProcessKey");
					this.OnProcessKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unattended", DbType="Bit NOT NULL")]
		public bool Unattended
		{
			get
			{
				return this._Unattended;
			}
			set
			{
				if ((this._Unattended != value))
				{
					this.OnUnattendedChanging(value);
					this.SendPropertyChanging();
					this._Unattended = value;
					this.SendPropertyChanged("Unattended");
					this.OnUnattendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowMultiInstance", DbType="Bit NOT NULL")]
		public bool AllowMultiInstance
		{
			get
			{
				return this._AllowMultiInstance;
			}
			set
			{
				if ((this._AllowMultiInstance != value))
				{
					this.OnAllowMultiInstanceChanging(value);
					this.SendPropertyChanging();
					this._AllowMultiInstance = value;
					this.SendPropertyChanged("AllowMultiInstance");
					this.OnAllowMultiInstanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentId", DbType="BigInt")]
		public System.Nullable<long> EnvironmentId
		{
			get
			{
				return this._EnvironmentId;
			}
			set
			{
				if ((this._EnvironmentId != value))
				{
					if (this._Environment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnvironmentIdChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentId = value;
					this.SendPropertyChanged("EnvironmentId");
					this.OnEnvironmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleterUserId", DbType="BigInt")]
		public System.Nullable<long> DeleterUserId
		{
			get
			{
				return this._DeleterUserId;
			}
			set
			{
				if ((this._DeleterUserId != value))
				{
					this.OnDeleterUserIdChanging(value);
					this.SendPropertyChanging();
					this._DeleterUserId = value;
					this.SendPropertyChanged("DeleterUserId");
					this.OnDeleterUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletionTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletionTime
		{
			get
			{
				return this._DeletionTime;
			}
			set
			{
				if ((this._DeletionTime != value))
				{
					this.OnDeletionTimeChanging(value);
					this.SendPropertyChanging();
					this._DeletionTime = value;
					this.SendPropertyChanged("DeletionTime");
					this.OnDeletionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifierUserId", DbType="BigInt")]
		public System.Nullable<long> LastModifierUserId
		{
			get
			{
				return this._LastModifierUserId;
			}
			set
			{
				if ((this._LastModifierUserId != value))
				{
					this.OnLastModifierUserIdChanging(value);
					this.SendPropertyChanging();
					this._LastModifierUserId = value;
					this.SendPropertyChanged("LastModifierUserId");
					this.OnLastModifierUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserId", DbType="BigInt")]
		public System.Nullable<long> CreatorUserId
		{
			get
			{
				return this._CreatorUserId;
			}
			set
			{
				if ((this._CreatorUserId != value))
				{
					this.OnCreatorUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserId = value;
					this.SendPropertyChanged("CreatorUserId");
					this.OnCreatorUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationUnitId", DbType="BigInt NOT NULL")]
		public long OrganizationUnitId
		{
			get
			{
				return this._OrganizationUnitId;
			}
			set
			{
				if ((this._OrganizationUnitId != value))
				{
					this.OnOrganizationUnitIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationUnitId = value;
					this.SendPropertyChanged("OrganizationUnitId");
					this.OnOrganizationUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputArguments", DbType="NVarChar(MAX)")]
		public string InputArguments
		{
			get
			{
				return this._InputArguments;
			}
			set
			{
				if ((this._InputArguments != value))
				{
					this.OnInputArgumentsChanging(value);
					this.SendPropertyChanging();
					this._InputArguments = value;
					this.SendPropertyChanged("InputArguments");
					this.OnInputArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessSettings", DbType="NVarChar(MAX)")]
		public string ProcessSettings
		{
			get
			{
				return this._ProcessSettings;
			}
			set
			{
				if ((this._ProcessSettings != value))
				{
					this.OnProcessSettingsChanging(value);
					this.SendPropertyChanging();
					this._ProcessSettings = value;
					this.SendPropertyChanged("ProcessSettings");
					this.OnProcessSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Environment_Release", Storage="_Environment", ThisKey="EnvironmentId", OtherKey="Id", IsForeignKey=true)]
		public Environment Environment
		{
			get
			{
				return this._Environment.Entity;
			}
			set
			{
				Environment previousValue = this._Environment.Entity;
				if (((previousValue != value) 
							|| (this._Environment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Environment.Entity = null;
						previousValue.Releases.Remove(this);
					}
					this._Environment.Entity = value;
					if ((value != null))
					{
						value.Releases.Add(this);
						this._EnvironmentId = value.Id;
					}
					else
					{
						this._EnvironmentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Environment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
